#!/usr/bin/env python3


PACKAGE = "ens_vision"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("adaptiveThreshWinSizeMin",    int_t,    0, "minimum window size for adaptive thresholding before finding contours", 3,  3, 100)
gen.add("adaptiveThreshWinSizeMax",    int_t,    0, "maximum window size for adaptive thresholding before finding contours", 23,  3, 100)
gen.add("adaptiveThreshWinSizeStep",    int_t,    0, "increments from adaptiveThreshWinSizeMin to adaptiveThreshWinSizeMax during the thresholding", 10,  1, 100)
gen.add("adaptiveThreshConstant",    double_t,    0, "constant for adaptive thresholding before finding contours", 7,  0, 100)
gen.add("minMarkerPerimeterRate", double_t, 0, "determine minimum perimeter for marker contour to be detected. This is defined as a rate respect to the maximum dimension of the input image",    .03, 0,   1)
gen.add("polygonalApproxAccuracyRate",    double_t,    0, "minimum accuracy during the polygonal approximation process to determine which contours are squares",  0.03,0,1)
gen.add("perspectiveRemovePixelPerCell",   int_t,   0, "number of bits (per dimension) for each cell of the marker when removing the perspective",  4, 1 ,10)
gen.add("maxErroneousBitsInBorderRate",   double_t,   0, "maximum number of accepted erroneous bits in the border (i.e. number of allowed white bits in the border). Represented as a rate respect to the total number of bits per marker",  0.35, 0, 1)
gen.add("errorCorrectionRate",   double_t,   0, "error correction rate respect to the maximun error correction capability for each dictionary",  0.6, 0, 1)

size_enum = gen.enum([ gen.const("CORNER_REFINE_NONE",      int_t, 0, "CORNER_REFINE_NONE"),
                       gen.const("CORNER_REFINE_SUBPIX",     int_t, 1, "CORNER_REFINE_SUBPIX"),
                       gen.const("CORNER_REFINE_CONTOUR",      int_t, 2, "CORNER_REFINE_CONTOUR"),
                       gen.const("CORNER_REFINE_APRILTAG", int_t, 3, "CORNER_REFINE_APRILTAG")],
                     "An enum to set size")

gen.add("cornerRefinementMethod", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "ens_vision", "Aruco"))

